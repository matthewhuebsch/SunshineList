source('~/SunshineList/sunshine.R', encoding = 'UTF-8')
source('~/SunshineList/sunshine.R', encoding = 'UTF-8')
source('~/SunshineList/sunshine.R', encoding = 'UTF-8')
library("rmarkdown", lib.loc="~/R/win-library/3.2")
rmarkdown
rmarkdown::render_site(input = "C:/Users/Matthew/Documents/SunshineList")
rmarkdown::render_site(input = "C:/Users/Matthew/Documents/SunshineList")
rmarkdown::render_site()
rmarkdown::render_site(input = "C:/Users/Matthew/Documents/SunshineList")
rmarkdown::render_site(input = "C:/Users/Matthew/Documents/SunshineList/")
rmarkdown::render_site(input = "C:/Users/Matthew/Documents/SunshineList")
?rmarkdown::render_site
?rmarkdown::render_site
rmarkdown::render_site(input = "C:/Users/Matthew/Documents/SunshineList")
rmarkdown::render_site
rmarkdown::render_site(input = "C:/Users/Matthew/Documents/SunshineList")
rmarkdown::render_site(input = "C:/Users/Matthew/Documents/SunshineList")
rmarkdown::render_site(input = "C:/Users/Matthew/Documents/SunshineList")
rmarkdown::render_site(input = "C:/Users/Matthew/Documents/SunshineList")
rmarkdown::render_site(input = "C:/Users/Matthew/Documents/SunshineList")
rmarkdown::render_site(input = "C:/Users/Matthew/Documents/SunshineList")
rmarkdown::render(input = "C:/Users/Matthew/Documents/SunshineList", output_format = HTML)
rmarkdown::render(input = "C:/Users/Matthew/Documents/SunshineList/sunshine.Rmd")
rmarkdown::render(input = "C:/Users/Matthew/Documents/SunshineList/asdf.Rmd")
rmarkdown::render(input = "C:/Users/Matthew/Documents/SunshineList/asdf.Rmd")
rmarkdown::render(input = "C:/Users/Matthew/Documents/SunshineList/asdf.Rmd")
rmarkdown::render(input = "C:/Users/Matthew/Documents/SunshineList/asdf.Rmd")
years = seq(2001, 2015, by=1)
if(F){
data_list = list()
for (i in 1:length(years)){
data_list[[i]] = read.csv(file.path(getwd(), "Inputs", "Salary Disclosure by year", "Curated Data", years[i], "merged_file.csv"), stringsAsFactors = F)
data_list[[i]]$Salary.Paid = as.numeric(gsub("[$,]","", data_list[[i]]$Salary.Paid))
data_list[[i]]$Taxable.Benefits = as.numeric(gsub("[$,]","", data_list[[i]]$Taxable.Benefits))
data_list[[i]]$Total.Compensation = data_list[[i]]$Salary.Paid + data_list[[i]]$Taxable.Benefits
data_list[[i]] = data_list[[i]][data_list[[i]]$Sector == "Universities", ]
#universities only for now
}
}
data_total = read.csv(file.path(getwd(), "Inputs", "Salary Disclosure by year", "Curated Data", years[1], "total_file.csv"), stringsAsFactors = F)
data_total = data_total[, c("Sector", "Last.name", "First.name", "Salary.Paid", "Taxable.Benefits", "Employer", "Job.title", "Calendar.Year")]
for (i in 2:length(years)){
data_to_bind = read.csv(file.path(getwd(), "Inputs", "Salary Disclosure by year", "Curated Data", years[i], "total_file.csv"), stringsAsFactors = F)
data_to_bind = data_to_bind[, c("Sector", "Last.name", "First.name", "Salary.Paid", "Taxable.Benefits", "Employer", "Job.title", "Calendar.Year")]
data_total = rbind(data_total, data_to_bind)
}
data_total$Salary.Paid = as.numeric(gsub("[$,]","", data_total$Salary.Paid))
data_total$Taxable.Benefits = as.numeric(gsub("[$,]","", data_total$Taxable.Benefits))
data_total$Total.Compensation = data_total$Salary.Paid + data_total$Taxable.Benefits
# data_total = data_total[data_total$Sector == "Universities", ]  # Universities only for now
compensation_over_time_plot = ggplot(data_total, aes(x=factor(Calendar.Year), y=Total.Compensation, fill=factor(Calendar.Year))) + geom_boxplot() + theme(axis.text.x  = element_text(angle=90, vjust=0.5)) + ylim(0,1500000)
ggplotly(compensation_over_time_plot)
compensation_over_time_plot_zoomed = ggplot(data_total, aes(x=factor(Calendar.Year), y=Total.Compensation, fill=factor(Calendar.Year))) + geom_boxplot() + theme(axis.text.x  = element_text(angle=90, vjust=0.5)) + ylim(0,1500000) +  coord_cartesian(ylim=c(0,300000))
ggplotly(compensation_over_time_plot_zoomed)
for (i in 1:length(years)){
hist(data_total[data_total$Calendar.Year==years[i], ]$Total.Compensation, breaks = 100, xlim = c(0,300000))
}
a= hist(data_total[data_total$Calendar.Year==years[i], ]$Total.Compensation, breaks = 100, xlim = c(0,300000))
b = data.frame(x=a$mids, r=a$counts)
#(b <- nls( r ~ k*exp(-1/2*(x-mu)^2/sigma^2), start=c(mu=120000,sigma=5,k=1) , data = b))
#v <- summary(b)$parameters[,"Estimate"]
years = seq(2001, 2015, by=1)
if(F){
data_list = list()
for (i in 1:length(years)){
data_list[[i]] = read.csv(file.path(getwd(), "Inputs", "Salary Disclosure by year", "Curated Data", years[i], "merged_file.csv"), stringsAsFactors = F)
data_list[[i]]$Salary.Paid = as.numeric(gsub("[$,]","", data_list[[i]]$Salary.Paid))
data_list[[i]]$Taxable.Benefits = as.numeric(gsub("[$,]","", data_list[[i]]$Taxable.Benefits))
data_list[[i]]$Total.Compensation = data_list[[i]]$Salary.Paid + data_list[[i]]$Taxable.Benefits
data_list[[i]] = data_list[[i]][data_list[[i]]$Sector == "Universities", ]
#universities only for now
}
}
data_total = read.csv(file.path(getwd(), "Inputs", "Salary Disclosure by year", "Curated Data", years[1], "total_file.csv"), stringsAsFactors = F)
data_total = data_total[, c("Sector", "Last.name", "First.name", "Salary.Paid", "Taxable.Benefits", "Employer", "Job.title", "Calendar.Year")]
for (i in 2:length(years)){
data_to_bind = read.csv(file.path(getwd(), "Inputs", "Salary Disclosure by year", "Curated Data", years[i], "total_file.csv"), stringsAsFactors = F)
data_to_bind = data_to_bind[, c("Sector", "Last.name", "First.name", "Salary.Paid", "Taxable.Benefits", "Employer", "Job.title", "Calendar.Year")]
data_total = rbind(data_total, data_to_bind)
}
data_total$Salary.Paid = as.numeric(gsub("[$,]","", data_total$Salary.Paid))
data_total$Taxable.Benefits = as.numeric(gsub("[$,]","", data_total$Taxable.Benefits))
data_total$Total.Compensation = data_total$Salary.Paid + data_total$Taxable.Benefits
# data_total = data_total[data_total$Sector == "Universities", ]  # Universities only for now
compensation_over_time_plot = ggplot(data_total, aes(x=factor(Calendar.Year), y=Total.Compensation, fill=factor(Calendar.Year))) + geom_boxplot() + theme(axis.text.x  = element_text(angle=90, vjust=0.5)) + ylim(0,1500000)
ggplotly(compensation_over_time_plot)
compensation_over_time_plot_zoomed = ggplot(data_total, aes(x=factor(Calendar.Year), y=Total.Compensation, fill=factor(Calendar.Year))) + geom_boxplot() + theme(axis.text.x  = element_text(angle=90, vjust=0.5)) + ylim(0,1500000) +  coord_cartesian(ylim=c(0,300000))
ggplotly(compensation_over_time_plot_zoomed)
for (i in 1:length(years)){
hist(data_total[data_total$Calendar.Year==years[i], ]$Total.Compensation, breaks = 100, xlim = c(0,300000))
}
a= hist(data_total[data_total$Calendar.Year==years[i], ]$Total.Compensation, breaks = 100, xlim = c(0,300000))
b = data.frame(x=a$mids, r=a$counts)
#(b <- nls( r ~ k*exp(-1/2*(x-mu)^2/sigma^2), start=c(mu=120000,sigma=5,k=1) , data = b))
#v <- summary(b)$parameters[,"Estimate"]
library(plotly)
years = seq(2001, 2015, by=1)
if(F){
data_list = list()
for (i in 1:length(years)){
data_list[[i]] = read.csv(file.path(getwd(), "Inputs", "Salary Disclosure by year", "Curated Data", years[i], "merged_file.csv"), stringsAsFactors = F)
data_list[[i]]$Salary.Paid = as.numeric(gsub("[$,]","", data_list[[i]]$Salary.Paid))
data_list[[i]]$Taxable.Benefits = as.numeric(gsub("[$,]","", data_list[[i]]$Taxable.Benefits))
data_list[[i]]$Total.Compensation = data_list[[i]]$Salary.Paid + data_list[[i]]$Taxable.Benefits
data_list[[i]] = data_list[[i]][data_list[[i]]$Sector == "Universities", ]
#universities only for now
}
}
data_total = read.csv(file.path(getwd(), "Inputs", "Salary Disclosure by year", "Curated Data", years[1], "total_file.csv"), stringsAsFactors = F)
data_total = data_total[, c("Sector", "Last.name", "First.name", "Salary.Paid", "Taxable.Benefits", "Employer", "Job.title", "Calendar.Year")]
for (i in 2:length(years)){
data_to_bind = read.csv(file.path(getwd(), "Inputs", "Salary Disclosure by year", "Curated Data", years[i], "total_file.csv"), stringsAsFactors = F)
data_to_bind = data_to_bind[, c("Sector", "Last.name", "First.name", "Salary.Paid", "Taxable.Benefits", "Employer", "Job.title", "Calendar.Year")]
data_total = rbind(data_total, data_to_bind)
}
data_total$Salary.Paid = as.numeric(gsub("[$,]","", data_total$Salary.Paid))
data_total$Taxable.Benefits = as.numeric(gsub("[$,]","", data_total$Taxable.Benefits))
data_total$Total.Compensation = data_total$Salary.Paid + data_total$Taxable.Benefits
# data_total = data_total[data_total$Sector == "Universities", ]  # Universities only for now
compensation_over_time_plot = ggplot(data_total, aes(x=factor(Calendar.Year), y=Total.Compensation, fill=factor(Calendar.Year))) + geom_boxplot() + theme(axis.text.x  = element_text(angle=90, vjust=0.5)) + ylim(0,1500000)
ggplotly(compensation_over_time_plot)
compensation_over_time_plot_zoomed = ggplot(data_total, aes(x=factor(Calendar.Year), y=Total.Compensation, fill=factor(Calendar.Year))) + geom_boxplot() + theme(axis.text.x  = element_text(angle=90, vjust=0.5)) + ylim(0,1500000) +  coord_cartesian(ylim=c(0,300000))
ggplotly(compensation_over_time_plot_zoomed)
for (i in 1:length(years)){
hist(data_total[data_total$Calendar.Year==years[i], ]$Total.Compensation, breaks = 100, xlim = c(0,300000))
}
a= hist(data_total[data_total$Calendar.Year==years[i], ]$Total.Compensation, breaks = 100, xlim = c(0,300000))
b = data.frame(x=a$mids, r=a$counts)
